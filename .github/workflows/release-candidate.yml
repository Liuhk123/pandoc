name: Release candidate

on:
  push:
    branches:
    - 'rc/**'

jobs:
  linux:

    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Create linux package
      run: |
          make debpkg
          mkdir linux-release-candidate
          cp linux/artifacts/*.deb linux-release-candidate/
          cp linux/artifacts/*.tar.gz linux-release-candidate/
    - uses: actions/upload-artifact@v2
      with:
        name: linux-release-candidate
        path: linux-release-candidate

  windows:

    runs-on: windows-2019
    strategy:
      fail-fast: true
      matrix:
        versions:
          - osarch: "windows-x86_64"
            arch: "x64"
            stack_opts: "-j1"

    steps:
    - uses: actions/checkout@v1
    - name: Build pandoc
      run: |
          ghc --version
          cabal --version
          cabal v2-update
          cabal v2-configure --enable-tests -f-export-dynamic -fstatic -fembed_data_files -fbibutils --enable-executable-static --ghc-options '-optc-Os -optl=-pthread -split-sections' pandoc
          cabal v2-build
          cabal v2-test -j1
          cabal v2-install --install-method=copy --installdir=.
    - name: Create windows package
      shell: cmd
      run: |
          for /f %%a in ('powershell -Command "Get-Date -format yyyy-MM-dd"') do set THEDATE=%%a
          for /f "tokens=1-2 delims= " %%a in ('.\pandoc.exe --version') do (
            @set VERSION=%%b
            goto :next
            )
          :next
          if "%VERSION%" == "" (
            echo Error: could not determine version number.
            exit /b 1
          )
          echo Detected version %VERSION%
          @set WINDOWS=%CD%\windows
          @set RELEASE=%WINDOWS%\pandoc-%VERSION%
          mkdir %RELEASE%
          copy pandoc.exe %RELEASE%\pandoc.exe
          .\pandoc.exe -s --toc MANUAL.txt -o %RELEASE%\MANUAL.html
          .\pandoc.exe -s COPYING.md -t rtf -o %RELEASE%\COPYING.rtf
          copy %RELEASE%\COPYING.rtf %WINDOWS%
          copy COPYRIGHT %RELEASE%\COPYRIGHT.txt
          cd windows
          echo Creating msi...
          dir
          @set WIXBIN="c:\Program Files (x86)\WiX Toolset v3.11\bin"
          @set WORKDIR=%CD%
          echo Running candle...
          %WIXBIN%\candle -arch ${{ matrix.versions.arch }} -dVERSION=%VERSION% -dBINPATH=%RELEASE% *.wxs -out wixobj\
          if %errorlevel% neq 0 exit /b %errorlevel%
          echo Running light...
          %WIXBIN%\light -sw1076 -ext WixUIExtension -ext WixUtilExtension -cultures:en-us -loc Pandoc-en-us.wxl -out %WORKDIR%\pandoc-%VERSION%-${{ matrix.versions.osarch }}-UNSIGNED.msi wixobj\*.wixobj
          7z a "pandoc-%VERSION%-${{ matrix.versions.osarch }}.zip" pandoc-%VERSION%
          cd ..
          mkdir windows-release-candidate
          copy windows\pandoc-%VERSION%-${{ matrix.versions.osarch }}-UNSIGNED.msi windows-release-candidate
          copy windows\pandoc-%VERSION%-${{ matrix.versions.osarch }}.zip windows-release-candidate
          copy windows\Makefile windows-release-candidate
    - uses: actions/upload-artifact@v2
      with:
        name: windows-release-candidate
        path: windows-release-candidate
